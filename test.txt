1. var / let / const
-var
-const : 업데이트 불가능
-let : 업데이트 가능


2. 변수 타입
- number
- string
- booleans
- null : 비어있다
- undefined : 변수에 값을 부여하지 않음

3. 데이터 구조
- Array (배열) : 값을 리스트로 정렬 / []
- objects : 리스트 X, { name(이름) : value(값) }의 형태 {}
(객체란 이름(name)과 값(value)으로 구성된 프로퍼티(property)의 정렬되지 않은 집합
프로퍼티의 값으로 함수가 올 수도 있는데 => 메소드(method)라고 함)

4.funtion
//데이터를 function에 보내는 법
function sayHello(nameOfPerson, age){
    console.log("Hello my name is " + nameOfPerson + ", and I'm " + age);
}

sayHello("doyoung", 20);
sayHello("seokhwan", 24);

function plus(a,b){
    console.log(a+b);
}

plus(20,24);

function divide(a,b){
    console.log(a/b);
}

divide(98,20);

//object 안의 function을 가져올 때는 46번처럼
const kbo_player = {
    name : "seokhwan",
    sayHi : function(otherPersonsName){
        console.log("hi!" + otherPersonsName + " nice!")
    }
}

console.log(kbo_player)
kbo_player.sayHi("haeyoung");

5. 조건문
if(condition) {
    //condition === true
    
} else {
    //condition === false
}

if(condition) {
   
} else if (other condition) {
    
} else {

}

&& => and  (a && b) => a와 b 모두 true일 때 -> true , 하나라도 다르면 false

true && true === true
false && true === false
true && false === false
false && false === false

|| => or (a || b) => a와 b 중 하나라도 true일 때 -> true

true || true === true
true || false === true
false || true === true
false || false === false 


6. string이랑 변수명을 합치는 법

"Hello " + 변수명  ===  `Hello ${변수명}`
"Hello " + username  ===  `Hello ${username}`


7. localstorage

localStorage.setItem(key, value);  => localStorage에 key 값과 value 값을 저장할 때
localStorage.setItem("username", 의리); => username : 의리 

localStorage.getItem(key) => localStorage에서 key 값에 해당하는 value 값을 가져올 때
localStorage.getItem("username"); => 의리 

localStorage.removeItem(key) => localStorage에서 key 값에 해당하는 value 값을 지울 때
localStorage.removeItem("username"); => 사라짐